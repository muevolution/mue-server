kind: pipeline
name: default

steps:
  - name: build
    image: node:carbon-alpine
    commands:
      - npm install
      - npm run build

  - name: test
    image: node:carbon-alpine
    commands:
      - npm run test
    environment:
      NODE_ENV: test
      redis__host: redis
    when:
      event:
        - push
        - pull_request

  # - name: publish_test_report
  #   image: plugins/s3-sync
  #   pull: always
  #   err_ignore: true
  #   settings:
  #     bucket: drone-test-results
  #     source: ./mochawesome-report/
  #     target: mue-server/${DRONE_BRANCH}/report/
  #     delete: true
  #     acl:
  #       "*": public-read
  #     path_style: true
  #     endpoint:
  #       from_secret: s3_endpoint
  #     access_key:
  #       from_secret: aws_access_key_id
  #     secret_key:
  #       from_secret: aws_secret_access_key
  #   when:
  #     event: push

  # - name: publish_test_cov
  #   image: plugins/s3-sync
  #   pull: always
  #   err_ignore: true
  #   settings:
  #     bucket: drone-test-results
  #     source: ./coverage/
  #     target: mue-server/${DRONE_BRANCH}/coverage/
  #     delete: true
  #     acl:
  #       "*": public-read
  #     path_style: true
  #     endpoint:
  #       from_secret: s3_endpoint
  #     access_key:
  #       from_secret: aws_access_key_id
  #     secret_key:
  #       from_secret: aws_secret_access_key
  #   when:
  #     event: push

  - name: publish_npm
    image: plugins/npm
    settings:
      registry: https://npm.cloud.neocodenetworks.org
      folder: client_types
      username:
        from_secret: npm_username
      password:
        from_secret: npm_password
      email:
        from_secret: npm_email
    when:
      event: deployment
      environment: production-npm

  - name: publish_docker
    image: plugins/docker
    settings:
      registry: docker.cloud.neocodenetworks.org
      repo: docker.cloud.neocodenetworks.org/mue/server
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - latest
        - ${DRONE_BRANCH}
    when:
      branch: master
      event: push

  - name: publish_docker_tag
    image: plugins/docker
    settings:
      registry: docker.cloud.neocodenetworks.org
      repo: docker.cloud.neocodenetworks.org/mue/server
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags: ${DRONE_TAG}
    when:
      event: tag

  - name: publish_docker_to_prod
    image: plugins/docker
    settings:
      registry: docker.cloud.neocodenetworks.org
      repo: docker.cloud.neocodenetworks.org/mue/server
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags: prod
    when:
      target: production

  - name: notify_neopush
    image: docker.cloud.neocodenetworks.org/neopush/drone
    pull: always
    err_ignore: true
    settings:
      api_key:
        from_secret: neopush_api_key

services:
  - name: redis
    image: redis
    ports:
      - 6379

---
kind: secret
name: npm_username
get:
  path: commonsecrets
  name: npm_username
---
kind: secret
name: npm_password
get:
  path: commonsecrets
  name: npm_password
---
kind: secret
name: npm_email
get:
  path: commonsecrets
  name: npm_email
---
kind: secret
name: docker_username
get:
  path: commonsecrets
  name: docker_username
---
kind: secret
name: docker_password
get:
  path: commonsecrets
  name: docker_password
---
kind: secret
name: s3_endpoint
get:
  path: commonsecrets
  name: s3_endpoint
---
kind: secret
name: aws_access_key_id
get:
  path: commonsecrets
  name: aws_access_key_id
---
kind: secret
name: aws_secret_access_key
get:
  path: commonsecrets
  name: aws_secret_access_key
---
kind: secret
name: neopush_api_key
get:
  path: commonsecrets
  name: neopush_api_key
